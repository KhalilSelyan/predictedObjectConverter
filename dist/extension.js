(()=>{"use strict";var __webpack_modules__={465:(__unused_webpack_module,exports)=>{eval('\nObject.defineProperty(exports, "__esModule", ({ value: true }));\nexports.activate = void 0;\nconst colorMap = {\n    0: { r: 0.5, g: 0.5, b: 0.5, a: 0.5 },\n    1: { r: 0.0, g: 0.0, b: 1.0, a: 0.5 },\n    2: { r: 1.0, g: 0.0, b: 0.0, a: 0.5 },\n    3: { r: 0.0, g: 1.0, b: 0.0, a: 0.5 },\n    4: { r: 0.0, g: 1.0, b: 1.0, a: 0.5 },\n    5: { r: 1.0, g: 0.0, b: 1.0, a: 0.5 },\n    6: { r: 1.0, g: 1.0, b: 0.0, a: 0.5 },\n    7: { r: 1.0, g: 1.0, b: 1.0, a: 0.5 }, // BICYCLE\n};\nfunction activate(extensionContext) {\n    extensionContext.registerMessageConverter({\n        fromSchemaName: "autoware_auto_perception_msgs/msg/PredictedObjects",\n        toSchemaName: "foxglove.SceneUpdate",\n        converter: (msg) => {\n            const { header, objects } = msg;\n            const cubePrimitives = objects.map((object) => {\n                const { kinematics, shape, classification } = object;\n                const { initial_pose_with_covariance } = kinematics;\n                const { position, orientation } = initial_pose_with_covariance.pose;\n                const { dimensions } = shape;\n                const { x, y } = dimensions;\n                if (classification.length === 0) {\n                    return undefined;\n                }\n                if (classification[0] && classification[0].label !== undefined) {\n                    const { label } = classification[0];\n                    const color = colorMap[label] ?? colorMap[0];\n                    const cube = {\n                        color,\n                        size: { x, y, z: 0.1 },\n                        pose: {\n                            position: {\n                                x: position.x,\n                                y: position.y,\n                                // make the cube start at the ground level (z = 0)\n                                z: position.z - 0.5 * dimensions.z,\n                            },\n                            orientation,\n                        },\n                    };\n                    return cube;\n                }\n                else {\n                    return undefined;\n                }\n            });\n            const cubePrimitivesFiltered = cubePrimitives.filter((cube) => cube !== undefined);\n            const sceneUpdateMessage = {\n                deletions: [],\n                entities: [\n                    {\n                        id: "predicted_objects",\n                        timestamp: header.stamp,\n                        frame_id: header.frame_id,\n                        frame_locked: false,\n                        lifetime: { sec: 1, nsec: 0 },\n                        metadata: [],\n                        arrows: [],\n                        cylinders: [],\n                        lines: [],\n                        spheres: [],\n                        texts: [],\n                        triangles: [],\n                        models: [],\n                        cubes: cubePrimitivesFiltered,\n                    },\n                ],\n            };\n            return sceneUpdateMessage;\n        },\n    });\n}\nexports.activate = activate;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDY1LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGdCQUFnQjtBQUNoQjtBQUNBLFNBQVMsZ0NBQWdDO0FBQ3pDLFNBQVMsZ0NBQWdDO0FBQ3pDLFNBQVMsZ0NBQWdDO0FBQ3pDLFNBQVMsZ0NBQWdDO0FBQ3pDLFNBQVMsZ0NBQWdDO0FBQ3pDLFNBQVMsZ0NBQWdDO0FBQ3pDLFNBQVMsZ0NBQWdDO0FBQ3pDLFNBQVMsZ0NBQWdDO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixrQkFBa0I7QUFDdEM7QUFDQSx3QkFBd0Isb0NBQW9DO0FBQzVELHdCQUF3QiwrQkFBK0I7QUFDdkQsd0JBQXdCLHdCQUF3QjtBQUNoRCx3QkFBd0IsYUFBYTtBQUNyQyx3QkFBd0IsT0FBTztBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixRQUFRO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyxjQUFjO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0NBQW9DLGlCQUFpQjtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7QUFDckI7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBLGdCQUFnQiIsInNvdXJjZXMiOlsid2VicGFjazovL3ByZWRpY3RlZG9iamVjdGNvbnZlcnRlci8uL3NyYy9pbmRleC50cz8zM2JjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5hY3RpdmF0ZSA9IHZvaWQgMDtcbmNvbnN0IGNvbG9yTWFwID0ge1xuICAgIDA6IHsgcjogMC41LCBnOiAwLjUsIGI6IDAuNSwgYTogMC41IH0sXG4gICAgMTogeyByOiAwLjAsIGc6IDAuMCwgYjogMS4wLCBhOiAwLjUgfSxcbiAgICAyOiB7IHI6IDEuMCwgZzogMC4wLCBiOiAwLjAsIGE6IDAuNSB9LFxuICAgIDM6IHsgcjogMC4wLCBnOiAxLjAsIGI6IDAuMCwgYTogMC41IH0sXG4gICAgNDogeyByOiAwLjAsIGc6IDEuMCwgYjogMS4wLCBhOiAwLjUgfSxcbiAgICA1OiB7IHI6IDEuMCwgZzogMC4wLCBiOiAxLjAsIGE6IDAuNSB9LFxuICAgIDY6IHsgcjogMS4wLCBnOiAxLjAsIGI6IDAuMCwgYTogMC41IH0sXG4gICAgNzogeyByOiAxLjAsIGc6IDEuMCwgYjogMS4wLCBhOiAwLjUgfSwgLy8gQklDWUNMRVxufTtcbmZ1bmN0aW9uIGFjdGl2YXRlKGV4dGVuc2lvbkNvbnRleHQpIHtcbiAgICBleHRlbnNpb25Db250ZXh0LnJlZ2lzdGVyTWVzc2FnZUNvbnZlcnRlcih7XG4gICAgICAgIGZyb21TY2hlbWFOYW1lOiBcImF1dG93YXJlX2F1dG9fcGVyY2VwdGlvbl9tc2dzL21zZy9QcmVkaWN0ZWRPYmplY3RzXCIsXG4gICAgICAgIHRvU2NoZW1hTmFtZTogXCJmb3hnbG92ZS5TY2VuZVVwZGF0ZVwiLFxuICAgICAgICBjb252ZXJ0ZXI6IChtc2cpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHsgaGVhZGVyLCBvYmplY3RzIH0gPSBtc2c7XG4gICAgICAgICAgICBjb25zdCBjdWJlUHJpbWl0aXZlcyA9IG9iamVjdHMubWFwKChvYmplY3QpID0+IHtcbiAgICAgICAgICAgICAgICBjb25zdCB7IGtpbmVtYXRpY3MsIHNoYXBlLCBjbGFzc2lmaWNhdGlvbiB9ID0gb2JqZWN0O1xuICAgICAgICAgICAgICAgIGNvbnN0IHsgaW5pdGlhbF9wb3NlX3dpdGhfY292YXJpYW5jZSB9ID0ga2luZW1hdGljcztcbiAgICAgICAgICAgICAgICBjb25zdCB7IHBvc2l0aW9uLCBvcmllbnRhdGlvbiB9ID0gaW5pdGlhbF9wb3NlX3dpdGhfY292YXJpYW5jZS5wb3NlO1xuICAgICAgICAgICAgICAgIGNvbnN0IHsgZGltZW5zaW9ucyB9ID0gc2hhcGU7XG4gICAgICAgICAgICAgICAgY29uc3QgeyB4LCB5IH0gPSBkaW1lbnNpb25zO1xuICAgICAgICAgICAgICAgIGlmIChjbGFzc2lmaWNhdGlvbi5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGNsYXNzaWZpY2F0aW9uWzBdICYmIGNsYXNzaWZpY2F0aW9uWzBdLmxhYmVsICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgeyBsYWJlbCB9ID0gY2xhc3NpZmljYXRpb25bMF07XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGNvbG9yID0gY29sb3JNYXBbbGFiZWxdID8/IGNvbG9yTWFwWzBdO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBjdWJlID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgY29sb3IsXG4gICAgICAgICAgICAgICAgICAgICAgICBzaXplOiB7IHgsIHksIHo6IDAuMSB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgcG9zZToge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHg6IHBvc2l0aW9uLngsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHk6IHBvc2l0aW9uLnksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIG1ha2UgdGhlIGN1YmUgc3RhcnQgYXQgdGhlIGdyb3VuZCBsZXZlbCAoeiA9IDApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHo6IHBvc2l0aW9uLnogLSAwLjUgKiBkaW1lbnNpb25zLnosXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcmllbnRhdGlvbixcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBjdWJlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGNvbnN0IGN1YmVQcmltaXRpdmVzRmlsdGVyZWQgPSBjdWJlUHJpbWl0aXZlcy5maWx0ZXIoKGN1YmUpID0+IGN1YmUgIT09IHVuZGVmaW5lZCk7XG4gICAgICAgICAgICBjb25zdCBzY2VuZVVwZGF0ZU1lc3NhZ2UgPSB7XG4gICAgICAgICAgICAgICAgZGVsZXRpb25zOiBbXSxcbiAgICAgICAgICAgICAgICBlbnRpdGllczogW1xuICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpZDogXCJwcmVkaWN0ZWRfb2JqZWN0c1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgdGltZXN0YW1wOiBoZWFkZXIuc3RhbXAsXG4gICAgICAgICAgICAgICAgICAgICAgICBmcmFtZV9pZDogaGVhZGVyLmZyYW1lX2lkLFxuICAgICAgICAgICAgICAgICAgICAgICAgZnJhbWVfbG9ja2VkOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGxpZmV0aW1lOiB7IHNlYzogMSwgbnNlYzogMCB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgbWV0YWRhdGE6IFtdLFxuICAgICAgICAgICAgICAgICAgICAgICAgYXJyb3dzOiBbXSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGN5bGluZGVyczogW10sXG4gICAgICAgICAgICAgICAgICAgICAgICBsaW5lczogW10sXG4gICAgICAgICAgICAgICAgICAgICAgICBzcGhlcmVzOiBbXSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRleHRzOiBbXSxcbiAgICAgICAgICAgICAgICAgICAgICAgIHRyaWFuZ2xlczogW10sXG4gICAgICAgICAgICAgICAgICAgICAgICBtb2RlbHM6IFtdLFxuICAgICAgICAgICAgICAgICAgICAgICAgY3ViZXM6IGN1YmVQcmltaXRpdmVzRmlsdGVyZWQsXG4gICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICByZXR1cm4gc2NlbmVVcGRhdGVNZXNzYWdlO1xuICAgICAgICB9LFxuICAgIH0pO1xufVxuZXhwb3J0cy5hY3RpdmF0ZSA9IGFjdGl2YXRlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///465\n')}},__webpack_exports__={};__webpack_modules__[465](0,__webpack_exports__),module.exports=__webpack_exports__})();